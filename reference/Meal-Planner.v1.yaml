openapi: 3.0.0
info:
  title: Meal Planner
  version: '1.0'
  contact:
    name: Phillip Lehner
    url: www.philliplehner.com
    email: pl@philliplehner.com
  description: Create recipes and build meal plans and shopping lists.
servers:
  - url: 'http://rosa.philliplehner.net/api/v1'
    description: development
  - description: production
    url: 'http://rosa.philliplehner.com/api/v1'
paths:
  /recipes:
    get:
      summary: Your GET endpoint
      tags:
        - recipes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ''
      operationId: get-recipes
      description: Get a pagenated list of all recipes on the server.
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: Search string of three or more characters
    post:
      summary: ''
      operationId: post-recipes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New-Recipe'
      description: Creates a new recipe.
      parameters:
        - schema:
            type: string
          in: query
          name: name
          required: true
          description: Recipe title. Should be unique.
        - schema:
            type: integer
          in: query
          name: yield
          required: true
          description: Number that describes the recipe's yield.
  '/recipes/{recipe-id}':
    parameters:
      - schema:
          type: string
        name: recipe-id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - recipes
      responses:
        '200':
          description: OK
      operationId: get-recipes-recipe-id
      description: 'Get details of a specific recipe, referenced by its ID.'
    post:
      summary: ''
      operationId: post-recipes-recipe-id
      responses:
        '200':
          description: OK
      description: Create new recipe.
      tags:
        - recipes
    put:
      summary: ''
      operationId: put-recipes-recipe-id
      responses:
        '200':
          description: OK
      description: Update or create recipe by recipe ID.
      tags:
        - recipes
    patch:
      summary: ''
      operationId: patch-recipes-recipe-id
      responses:
        '200':
          description: OK
      description: Update values of recipe ID.
      tags:
        - recipes
    delete:
      summary: ''
      operationId: delete-recipes-recipe-id
      responses:
        '200':
          description: OK
      description: Delete recipe at ID.
      tags:
        - recipes
components:
  schemas:
    New-Recipe:
      title: New-Recipe
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        yield:
          type: string
    Recipe:
      title: Recipe
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        yield:
          type: integer
        ingredients:
          $ref: '#/components/schemas/Ingredients'
    Ingredients:
      title: Ingredients
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        amount:
          type: string
tags:
  - name: recipes
